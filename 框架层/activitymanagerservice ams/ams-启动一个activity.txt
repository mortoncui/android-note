参见：
Android应用程序启动过程源代码分析
	http://blog.csdn.net/luoshengyang/article/details/6689748
【凯子哥带你学Framework】Activity启动过程全解析 - CSDN博客
	http://blog.csdn.net/zhaokaiqiang1992/article/details/49428287
3分钟看懂Activity启动流程
	http://www.jianshu.com/p/9ecea420eb52

背景：当前界面为appA的activityA，现在要启动 appB的activityB
（也可参见：viewroot的创建 及 和wms建立关系.txt）
在appA中，通过IActivityManager，向AMS发请求：要求启动 appB的activityB
	Activity#startActivity
		Activity#startActivityForResult
			Instrumentation#execStartActivity
				IActivityManager#startActivity
AMS通过IApplicationThread 要求activityA 进行pause
appA的ApplicationThread收到请求后，要求ActivityThread来 pause activityA
activityA被pause后，通过IActivityManager 向AMS汇报
--
AMS要启动activityB，首先判断activityB对应的ProcessRecord是否存在（通过processname（ActivityRecord.processname）, uid（ActivityRecord.activityinfo.applicationinfo.uid）的方式），并没有发现 该ProcessRecord
创建ProcessRecord对象（存入关键信息（processName,uid等）），创建进程
appB的ActivityThread.main执行，并在其中执行了ActivityThread.attach
	汇报自己的ActivityThread.ApplicationThread给AMS（通过ActivityManagerService#attachApplication(IApplicationThread)）
AMS收到该IApplicationThread
	将pid（通过ibinder.getcallingpid）和该IApplicationThread存入到ProcessRecord中
	AMS要求appB 来创建Application，并执行其#attach, #onCreate，具体细节如下：
		ApplicationThread#handleBindApplication
			LoadedApk#makeApplication
				Instrumentation.newApplication
					执行Application的创建 和 attach
			Instrumentation.callApplicationOnCreate
				执行Application#onCreate
AMS发现 之前要启动的ActivityRecord（对应activityB） 的app（ProcessRecord）为空（因为为空，才创建进程的么），但是刚被attach的ProcessRecord的 name和uid 均满足ActivityRecord的要求，那么，启动该ActivityRecord
AMS通过 appB的IApplicationThread，要求 启动activityB
	（ActivityThread.ApplicationThread#scheduleLaunchActivity）
appB的ApplicationThread 要求 ActivityThread 启动activityB
	（ActivityThread.handleLaunchActivity）
	创建activityB对象
		从Intent中找到对应的ComponentName
			如果其未被设置ComponentName，则请求PackageManager解析该Intent来得到：PackageManager#resolveActivity(Intent, PackageManager.MATCH_DEFAULT_ONLY)
		Instrumentation.newActivity(ClassLoader cl, String className, Intent intent) 来构建activityB对象
			className为 ComponentName#getClassName
	创建application对象（如果需要）
	activityB.attach
	执行activityB.onCreate		
	执行activityB.onRestoreInstanceState

--------------------------------------------------其他的核心概念
Instrument
在创建Application和Activity对象时，均使用Instrument来进行
目的：本身是一个wrapper，可用于日志记录
