参见：
Activity与Fragment生命周期探讨
	http://www.jianshu.com/p/1b3f829810a1
Understanding Fragment's setRetainInstance(boolean)
	http://stackoverflow.com/questions/11182180/understanding-fragments-setretaininstanceboolean

设：在activityA中，add了fragment1，fragment1.setRetainInstance(true)
那么当宿主Activity需要重建时（如：往往因为config change（如：横竖屏切换），但activity又不能处理该config change时）
	activityA将执行销毁，fragment1会走到onDetach，但并不会执行onDestroy（仅仅）
	activityB会被构建，并执行onCreate，则需要恢复Fragment（如果之前，activityA.onSaveInstanceState中对Fragment进行了state save）
		此时，仍然使用fragment1（而非新建一个fragment2）来执行onAttach, onCreateView等，但，不会执行onCreate（仅仅）

Activity重建的原因 vs retain是否有效：
. 因为config change（有效）
. 正常杀死（finish）/被系统杀死（low memory）（无效）
. 不保留后台（无效）

--------------------------------------------------例子:
class RetainFragment extends Fragment {
	private static final String TAG = "RetainFragment";
	public LruCache<String, Bitmap> mRetainedCache;

	public RetainFragment() {}

	public static RetainFragment findOrCreateRetainFragment(FragmentManager fm) {
		RetainFragment fragment = (RetainFragment) fm.findFragmentByTag(TAG);
		if (fragment == null) {
			fragment = new RetainFragment();
			fm.beginTransaction().add(fragment, TAG).commit();
		}
		return fragment;
	}

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setRetainInstance(true);
	}
}