参见：
关于Android中工作者线程的思考
    http://droidyue.com/blog/2015/12/20/worker-thread-in-android/
    其中包含了：asynctask可能会引发内存泄漏的原因
Android 线程的正确使用姿势
	http://android.jobbole.com/82440/
Android源码解析之（三）-->异步任务AsyncTask
	http://blog.csdn.net/qq_23547831/article/details/50803849

形式：
AsyncTask<Params, Progress, Result>

和thread相比，优点：
任务的执行是有结果的
提供 新线程和ui线程的切换
提供一些点（本质是回调点）来 中止 任务

有什么缺点：
AsyncTask在不同的系统版本上串行与并行的执行行为不一致
有时候，该task甚至没有被真正执行

属于什么group：
background group

可以在线程池上运行：
executeOnExecutor(Executor, Object...)

可能会内存泄漏
本质上，AsyncTask的执行为Executor#execute(Runnable)
在还未执行时，该Runnable会一直缓存于某个Executor中（如：ThreadPoolExecutor）
而该Runnable为AsyncTask#mWorker，而如果AsyncTask为Activity的内部类
则导致内存泄漏

cancel操作：
本质上：FutureTask#cancel(boolean mayInterruptIfRunning)
